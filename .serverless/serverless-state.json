{
  "service": {
    "service": "HelloWorldFunction",
    "serviceObject": {
      "name": "HelloWorldFunction"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([^{}:]+?(?:\\(|:)[^:{}][^{}]*?)}",
      "name": "aws",
      "region": "eu-west-1",
      "runtime": "java11",
      "profile": "RadekC",
      "environment": {
        "STAGE": "dev",
        "LOG_LEVEL": "debug"
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "SqsLAMBDAsqsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sqsLAMBDAsqs"
            }
          },
          "SqsLAMBDAapiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sqsLAMBDAapi"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "HelloWorldFunction",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sqsLAMBDAsqs:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sqsLAMBDAapi:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sqsLAMBDAsqs:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sqsLAMBDAapi:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "snsSQSlambdaQueue",
                              "Arn"
                            ]
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "lambdaSQSlambdaQueue",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "HelloWorldFunction",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "SqsLAMBDAsqsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/HelloWorldFunction/dev/1602680253011-2020-10-14T12:57:33.011Z/HelloWorld-1.0.jar"
              },
              "FunctionName": "sqsLAMBDAsqs",
              "Handler": "helloworld.ReadWriteSQSLambdaSQS",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "java11",
              "Timeout": 15,
              "Tags": [
                {
                  "Key": "CHANGE_AUTHOR",
                  "Value": "Radek"
                },
                {
                  "Key": "BUILD_URL",
                  "Value": "URL"
                }
              ],
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "LOG_LEVEL": "debug"
                }
              }
            },
            "DependsOn": [
              "SqsLAMBDAsqsLogGroup"
            ]
          },
          "SqsLAMBDAsqsLambdaVersionKRKpJx33ZBw5CaPrdHkf9jRiKu6w6o0RuCJhsHno4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SqsLAMBDAsqsLambdaFunction"
              },
              "CodeSha256": "XhiY6nNQEm0AfFDbytK2ach47cOvWVJ64QPXAc6ANr8="
            }
          },
          "SqsLAMBDAapiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/HelloWorldFunction/dev/1602680253011-2020-10-14T12:57:33.011Z/HelloWorld-1.0.jar"
              },
              "FunctionName": "sqsLAMBDAapi",
              "Handler": "helloworld.ReadWriteSQSLambdaAPI",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "java11",
              "Timeout": 15,
              "Tags": [
                {
                  "Key": "CHANGE_AUTHOR",
                  "Value": "Radek"
                },
                {
                  "Key": "BUILD_URL",
                  "Value": "URL"
                }
              ],
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "LOG_LEVEL": "debug"
                }
              }
            },
            "DependsOn": [
              "SqsLAMBDAapiLogGroup"
            ]
          },
          "SqsLAMBDAapiLambdaVersion9rfQzuwEkBIFCkmzWxPozYMXXuWjFUJBTVaSsfGPNQo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SqsLAMBDAapiLambdaFunction"
              },
              "CodeSha256": "XhiY6nNQEm0AfFDbytK2ach47cOvWVJ64QPXAc6ANr8="
            }
          },
          "SqsLAMBDAsqsEventSourceMappingSQSSnsSQSlambdaQueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "snsSQSlambdaQueue",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "SqsLAMBDAsqsLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "SqsLAMBDAapiEventSourceMappingSQSLambdaSQSlambdaQueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "lambdaSQSlambdaQueue",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "SqsLAMBDAapiLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "s3SNSsqsTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "TopicName": "s3SNSsqsTopic",
              "Subscription": [
                {
                  "Endpoint": {
                    "Fn::GetAtt": [
                      "snsSQSlambdaQueue",
                      "Arn"
                    ]
                  },
                  "Protocol": "sqs"
                }
              ]
            }
          },
          "s3SNSsqsTopicPolicy": {
            "Type": "AWS::SNS::TopicPolicy",
            "DependsOn": "s3SNSsqsTopic",
            "Properties": {
              "Topics": [
                {
                  "Ref": "s3SNSsqsTopic"
                }
              ],
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "SNS:Publish",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Resource": {
                      "Ref": "s3SNSsqsTopic"
                    },
                    "Condition": {
                      "ArnEquals": {
                        "aws:SourceArn": "arn:aws:s3:::rcyganczuk-in-cloud-bucket-input"
                      }
                    }
                  }
                ]
              }
            }
          },
          "snsSQSlambdaQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "snsSQSlambdaQueue",
              "VisibilityTimeout": 20,
              "MaximumMessageSize": 262144,
              "DelaySeconds": 0,
              "MessageRetentionPeriod": 345600,
              "ReceiveMessageWaitTimeSeconds": 1
            }
          },
          "snsSQSlambdaQueuePolicy": {
            "Type": "AWS::SQS::QueuePolicy",
            "DependsOn": "snsSQSlambdaQueue",
            "Properties": {
              "Queues": [
                {
                  "Ref": "snsSQSlambdaQueue"
                }
              ],
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "SQS:SendMessage",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Resource": {
                      "Fn::GetAtt": [
                        "snsSQSlambdaQueue",
                        "Arn"
                      ]
                    },
                    "Condition": {
                      "ArnEquals": {
                        "aws:SourceArn": {
                          "Ref": "s3SNSsqsTopic"
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "lambdaSQSlambdaQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "lambdaSQSlambdaQueue",
              "VisibilityTimeout": 20,
              "MaximumMessageSize": 262144,
              "DelaySeconds": 0,
              "MessageRetentionPeriod": 345600,
              "ReceiveMessageWaitTimeSeconds": 1,
              "RedrivePolicy": {
                "deadLetterTargetArn": {
                  "Fn::GetAtt": [
                    "deadLetterQueue",
                    "Arn"
                  ]
                },
                "maxReceiveCount": 3
              }
            }
          },
          "deadLetterQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "deadLetterQueue",
              "VisibilityTimeout": 20,
              "MaximumMessageSize": 262144,
              "DelaySeconds": 0,
              "MessageRetentionPeriod": 345600,
              "ReceiveMessageWaitTimeSeconds": 1
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "SqsLAMBDAsqsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SqsLAMBDAsqsLambdaVersionKRKpJx33ZBw5CaPrdHkf9jRiKu6w6o0RuCJhsHno4"
            }
          },
          "SqsLAMBDAapiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SqsLAMBDAapiLambdaVersion9rfQzuwEkBIFCkmzWxPozYMXXuWjFUJBTVaSsfGPNQo"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "config": {
        "bucketName": "rcyganczuk-in-cloud-bucket-input",
        "topicName": "s3SNSsqsTopic",
        "SplitterQueueName": "snsSQSlambdaQueue",
        "sqsLAMBDAsqsName": "sqsLAMBDAsqs",
        "sqsLAMBDAapiName": "sqsLAMBDAapi",
        "ConverterQueueName": "lambdaSQSlambdaQueue",
        "deadLetterQueueName": "deadLetterQueue",
        "logLevel": "debug"
      },
      "functionTimeout": 15,
      "queueVisibilityTimeout": 20
    },
    "pluginsData": {},
    "functions": {
      "sqsLAMBDAsqs": {
        "handler": "helloworld.ReadWriteSQSLambdaSQS",
        "name": "sqsLAMBDAsqs",
        "timeout": 15,
        "MemorySize": 512,
        "Role": "arn:aws:iam::910682323108:role/aws-jdk-tool-HelloWorldFunctionRole-FQMTW660F1QY",
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2][\"Resource\"][0]"
              }
            }
          }
        ],
        "tags": {
          "CHANGE_AUTHOR": "Radek",
          "BUILD_URL": "URL"
        },
        "package": {},
        "memory": 1024,
        "runtime": "java11",
        "vpc": {},
        "versionLogicalId": "SqsLAMBDAsqsLambdaVersionKRKpJx33ZBw5CaPrdHkf9jRiKu6w6o0RuCJhsHno4"
      },
      "sqsLAMBDAapi": {
        "handler": "helloworld.ReadWriteSQSLambdaAPI",
        "name": "sqsLAMBDAapi",
        "timeout": 15,
        "MemorySize": 512,
        "Role": "arn:aws:iam::910682323108:role/aws-jdk-tool-HelloWorldFunctionRole-FQMTW660F1QY",
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][3][\"Resource\"][0]"
              }
            }
          }
        ],
        "tags": {
          "CHANGE_AUTHOR": "Radek",
          "BUILD_URL": "URL"
        },
        "package": {},
        "memory": 1024,
        "runtime": "java11",
        "vpc": {},
        "versionLogicalId": "SqsLAMBDAapiLambdaVersion9rfQzuwEkBIFCkmzWxPozYMXXuWjFUJBTVaSsfGPNQo"
      }
    },
    "resources": {
      "Resources": {
        "s3SNSsqsTopic": {
          "Type": "AWS::SNS::Topic",
          "Properties": {
            "TopicName": "s3SNSsqsTopic",
            "Subscription": [
              {
                "Endpoint": {
                  "Fn::GetAtt": [
                    "snsSQSlambdaQueue",
                    "Arn"
                  ]
                },
                "Protocol": "sqs"
              }
            ]
          }
        },
        "s3SNSsqsTopicPolicy": {
          "Type": "AWS::SNS::TopicPolicy",
          "DependsOn": "s3SNSsqsTopic",
          "Properties": {
            "Topics": [
              {
                "Ref": "s3SNSsqsTopic"
              }
            ],
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "SNS:Publish",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Resource": {
                    "Ref": "s3SNSsqsTopic"
                  },
                  "Condition": {
                    "ArnEquals": {
                      "aws:SourceArn": "arn:aws:s3:::rcyganczuk-in-cloud-bucket-input"
                    }
                  }
                }
              ]
            }
          }
        },
        "snsSQSlambdaQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "snsSQSlambdaQueue",
            "VisibilityTimeout": 20,
            "MaximumMessageSize": 262144,
            "DelaySeconds": 0,
            "MessageRetentionPeriod": 345600,
            "ReceiveMessageWaitTimeSeconds": 1
          }
        },
        "snsSQSlambdaQueuePolicy": {
          "Type": "AWS::SQS::QueuePolicy",
          "DependsOn": "snsSQSlambdaQueue",
          "Properties": {
            "Queues": [
              {
                "Ref": "snsSQSlambdaQueue"
              }
            ],
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "SQS:SendMessage",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Resource": {
                    "Fn::GetAtt": [
                      "snsSQSlambdaQueue",
                      "Arn"
                    ]
                  },
                  "Condition": {
                    "ArnEquals": {
                      "aws:SourceArn": {
                        "Ref": "s3SNSsqsTopic"
                      }
                    }
                  }
                }
              ]
            }
          }
        },
        "lambdaSQSlambdaQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "lambdaSQSlambdaQueue",
            "VisibilityTimeout": 20,
            "MaximumMessageSize": 262144,
            "DelaySeconds": 0,
            "MessageRetentionPeriod": 345600,
            "ReceiveMessageWaitTimeSeconds": 1,
            "RedrivePolicy": {
              "deadLetterTargetArn": {
                "Fn::GetAtt": [
                  "deadLetterQueue",
                  "Arn"
                ]
              },
              "maxReceiveCount": 3
            }
          }
        },
        "deadLetterQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "deadLetterQueue",
            "VisibilityTimeout": 20,
            "MaximumMessageSize": 262144,
            "DelaySeconds": 0,
            "MessageRetentionPeriod": 345600,
            "ReceiveMessageWaitTimeSeconds": 1
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "layers": {},
    "initialServerlessConfig": {
      "service": "HelloWorldFunction",
      "frameworkVersion": "2",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "name": "aws",
        "region": "eu-west-1",
        "stage": "dev",
        "runtime": "java11",
        "profile": "RadekC",
        "environment": {
          "STAGE": "dev",
          "LOG_LEVEL": "debug"
        }
      },
      "package": {
        "artifact": "target/HelloWorld-1.0.jar",
        "artifactDirectoryName": "serverless/HelloWorldFunction/dev/1602680253011-2020-10-14T12:57:33.011Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": [
        {
          "Resources": {
            "s3SNSsqsTopic": {
              "Type": "AWS::SNS::Topic",
              "Properties": {
                "TopicName": "s3SNSsqsTopic",
                "Subscription": [
                  {
                    "Endpoint": {
                      "Fn::GetAtt": [
                        "snsSQSlambdaQueue",
                        "Arn"
                      ]
                    },
                    "Protocol": "sqs"
                  }
                ]
              }
            },
            "s3SNSsqsTopicPolicy": {
              "Type": "AWS::SNS::TopicPolicy",
              "DependsOn": "s3SNSsqsTopic",
              "Properties": {
                "Topics": [
                  {
                    "Ref": "s3SNSsqsTopic"
                  }
                ],
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "SNS:Publish",
                      "Effect": "Allow",
                      "Principal": "*",
                      "Resource": {
                        "Ref": "s3SNSsqsTopic"
                      },
                      "Condition": {
                        "ArnEquals": {
                          "aws:SourceArn": "arn:aws:s3:::rcyganczuk-in-cloud-bucket-input"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "snsSQSlambdaQueue": {
              "Type": "AWS::SQS::Queue",
              "Properties": {
                "QueueName": "snsSQSlambdaQueue",
                "VisibilityTimeout": 20,
                "MaximumMessageSize": 262144,
                "DelaySeconds": 0,
                "MessageRetentionPeriod": 345600,
                "ReceiveMessageWaitTimeSeconds": 1
              }
            },
            "snsSQSlambdaQueuePolicy": {
              "Type": "AWS::SQS::QueuePolicy",
              "DependsOn": "snsSQSlambdaQueue",
              "Properties": {
                "Queues": [
                  {
                    "Ref": "snsSQSlambdaQueue"
                  }
                ],
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "SQS:SendMessage",
                      "Effect": "Allow",
                      "Principal": "*",
                      "Resource": {
                        "Fn::GetAtt": [
                          "snsSQSlambdaQueue",
                          "Arn"
                        ]
                      },
                      "Condition": {
                        "ArnEquals": {
                          "aws:SourceArn": {
                            "Ref": "s3SNSsqsTopic"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "lambdaSQSlambdaQueue": {
              "Type": "AWS::SQS::Queue",
              "Properties": {
                "QueueName": "lambdaSQSlambdaQueue",
                "VisibilityTimeout": 20,
                "MaximumMessageSize": 262144,
                "DelaySeconds": 0,
                "MessageRetentionPeriod": 345600,
                "ReceiveMessageWaitTimeSeconds": 1,
                "RedrivePolicy": {
                  "deadLetterTargetArn": {
                    "Fn::GetAtt": [
                      "deadLetterQueue",
                      "Arn"
                    ]
                  },
                  "maxReceiveCount": 3
                }
              }
            },
            "deadLetterQueue": {
              "Type": "AWS::SQS::Queue",
              "Properties": {
                "QueueName": "deadLetterQueue",
                "VisibilityTimeout": 20,
                "MaximumMessageSize": 262144,
                "DelaySeconds": 0,
                "MessageRetentionPeriod": 345600,
                "ReceiveMessageWaitTimeSeconds": 1
              }
            }
          }
        }
      ]
    },
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/HelloWorldFunction/dev/1602680253011-2020-10-14T12:57:33.011Z",
    "artifact": "HelloWorld-1.0.jar"
  }
}