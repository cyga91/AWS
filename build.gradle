plugins {
    id 'java'
    id 'maven-publish'
    id 'java-library'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
//    mavenCentral()
}

ext {
    awsLambdaCoreVersion = '1.2.0'
    awsLambdaEventsVersion = '3.1.0'
    awsSdkVersion = '1.11.837'
    sl4jVersion = '2.13.2'
    lombokVersion = '1.18.12'
    camelCoreVersion = '3.6.0'
    camelSpringBootVersion = '3.1.0'
    jUnitVersion = '5.6.2'
    mockitoJupiterVersion = '3.1.0'
    assertjVersion = '3.15.0'
    wiremockVersion = '2.26.3'
    jsonassertVersion = '1.5.0'
}

dependencies {
    // AWS
    implementation "com.amazonaws:aws-lambda-java-core:$awsLambdaCoreVersion"
    implementation "com.amazonaws:aws-lambda-java-events:$awsLambdaEventsVersion"
    implementation "com.amazonaws:aws-java-sdk-lambda:$awsSdkVersion"
    implementation "com.amazonaws:aws-java-sdk-s3:$awsSdkVersion"
    implementation "com.amazonaws:aws-java-sdk-sqs:$awsSdkVersion"
    implementation "com.amazonaws:aws-lambda-java-log4j2:$awsLambdaCoreVersion"


    // Logging
    implementation "org.apache.logging.log4j:log4j-api:$sl4jVersion"
    implementation "org.apache.logging.log4j:log4j-core:$sl4jVersion"
    implementation "org.apache.logging.log4j:log4j-slf4j18-impl:$sl4jVersion"


    // Lombok
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    // Camel
//    implementation "org.apache.camel:camel-core:$camelCoreVersion"
    implementation "org.apache.camel.springboot:camel-core-starter:$camelSpringBootVersion"
    implementation "org.apache.camel.springboot:camel-spring-boot-starter:$camelSpringBootVersion"

    implementation("org.apache.camel.springboot:camel-http-starter:${camelSpringBootVersion}")
    implementation("org.apache.camel.springboot:camel-jackson-starter:${camelSpringBootVersion}")
    implementation("org.apache.camel:camel-jaxb:${camelSpringBootVersion}")
    implementation("org.apache.camel:camel-mvel:${camelSpringBootVersion}")

    // Test dependencies
//    testImplementation "unit:junit:$junitVersion"
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation "org.skyscreamer:jsonassert:$jsonassertVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoJupiterVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jUnitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$jUnitVersion"
    testImplementation "com.github.tomakehurst:wiremock-jre8:$wiremockVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$jUnitVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

//test {
//    // Use junit platform for unit tests
//    useJUnitPlatform()
//}

group = 'helloworld'
version = '1.0'
description = 'A sample Hello World created for SAM CLI.'
java.sourceCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}