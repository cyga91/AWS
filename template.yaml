AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Sample SAM Template for AWS

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
#Globals:
#  Function:

Resources:
  #  s3
  s3BucketInCloudInput:
    Type: AWS::S3::Bucket
    DependsOn: s3SNSsqsTopic
    Properties:
      BucketName: rcyganczuk-in-cloud-bucket-input
      NotificationConfiguration:
        TopicConfigurations:
          - Topic: !Ref s3SNSsqsTopic
            Event: s3:ObjectCreated:*

  #  sns
  s3SNSsqsTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint:
            Fn::GetAtt:
              - snsSQSlambdaQueue
              - Arn
          Protocol: sqs
      TopicName: s3SNSsqsTopic

  s3SNSsqsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    DependsOn: s3SNSsqsTopic
    Properties:
      PolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            Service: s3.amazonaws.com
          Action:
            - sns:Publish
          Resource: !Ref s3SNSsqsTopic
          Condition:
            ArnEquals:
              aws:SourceArn: arn:aws:s3:::rcyganczuk-in-cloud-bucket-input
      Topics:
        - !Ref s3SNSsqsTopic

  #  # subscription
  #  SnsSubscription:
  #    Type: AWS::SNS::Subscription
  #    Properties:
  #      Protocol: sqs
  ##      Endpoint: !GetAtt Queue.Arn
  #      Endpoint:
  #        Fn::GetAtt:
  #          - "snsSQSlambda"
  #          - "Arn"
  #      Region: !Ref s3SNSsqsTopic
  #      TopicArn: !Ref s3SNSsqsTopic

  #  sqs
  snsSQSlambdaQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      MaximumMessageSize: 262144 #256 KiB
      MessageRetentionPeriod: 345600 #sec = 4 days
      QueueName: snsSQSlambdaQueue
      ReceiveMessageWaitTimeSeconds: 1
      VisibilityTimeout: 30

  snsSQSlambdaQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    DependsOn: snsSQSlambdaQueue
    Properties:
      PolicyDocument:
        Statement:
          - Sid: Allow-SNS-SendMessage
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action:
              - sqs:SendMessage
            Resource: !GetAtt snsSQSlambdaQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref s3SNSsqsTopic
      Queues:
        - !Ref snsSQSlambdaQueue

  lambdaSQSlambdaQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      MaximumMessageSize: 262144 #256 KiB
      MessageRetentionPeriod: 345600 #sec = 4 days
      QueueName: lambdaSQSlambdaQueue
      ReceiveMessageWaitTimeSeconds: 1
      VisibilityTimeout: 30

  deadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      MaximumMessageSize: 262144 #256 KiB
      MessageRetentionPeriod: 345600 #sec = 4 days
      QueueName: deadLetterQueue
      ReceiveMessageWaitTimeSeconds: 1
      VisibilityTimeout: 30

  #  lambda
  sqsLAMBDAsqs:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: sqsLAMBDAsqs
      Handler: helloworld.Handler::handleRequest
      Runtime: java11
#      CodeUri: target/HelloWorld-1.0.jar
      #      Policies:
      #        - AmazonSQSFullAccess:
      #            SQSName: !Ref snsSQSlambdaQueue
      MemorySize: 512
      Role: arn:aws:iam::910682323108:role/aws-jdk-tool-HelloWorldFunctionRole-FQMTW660F1QY
      Events:
        ReadWriteSQSLambdaSQS:
          Type: SQS # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#sqs
          Properties:
            Queue:
              Fn::GetAtt:
                - snsSQSlambdaQueue
                - Arn
            BatchSize: 10
            Enabled: true

#  sqsLAMBDAapi:
#    Type: AWS::Serverless::Function
#    Properties:
#      FunctionName: sqsLAMBDAapi
#      Handler: helloworld.ReadWriteSQSLambdaAPI
#      Runtime: java11
#      #      Policies:
#      #        - AmazonSQSFullAccess:
#      #            SQSName: !Ref lambdaSQSlambdaQueue
#      MemorySize: 512
#      Role: arn:aws:iam::910682323108:role/aws-jdk-tool-HelloWorldFunctionRole-FQMTW660F1QY
#      #      DeadLetterQueue:
#      #        Type: SQS
#      ##        TargetArn: arn:aws:sns:us-east-2:123456789012:my-topic
#      #        TargetArn: !GetAtt deadLetterQueue.Arn
#      Events:
#        ReadWriteSQSLambdaAPI:
#          Type: SQS
#          Properties:
#            Queue:
#              Fn::GetAtt:
#                - lambdaSQSlambdaQueue
#                - Arn
#            BatchSize: 10
#            Enabled: true